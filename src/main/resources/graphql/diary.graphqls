type Diary {
    id:ID,
    date:String,
    portion:Float,
    food:Food,
    protein:Float,
    carbohydrate:Float,
    fat:Float,
    calories:Float,
    menu:String,
    user:User


}

type DiaryDetail {
    date:String,
    protein:Float,
    carbohydrate:Float,
    fat:Float,
    calorie:Float,
    recommendedCalorie:Float
}

type TotalCalorie {
    recommendedCalorie:Float,
    total:Float
    date:String
    msg:String
}

type DiaryInfo {
    diaries:[Diary],
    diaryDetail:DiaryDetail
}

input DiaryInput {
    id:ID,
    portion:Float,
    foodId:ID,
    menu:String,
    userId:ID
}

extend type Mutation {
    saveDiary(diaryInput:DiaryInput):Diary
    deleteDiary(id:ID!):Boolean
}

extend type Query {
    diaries:[Diary]
    diary(id:ID!):Diary
    totalCalorie(userId:ID!):[TotalCalorie]
    diaryDetail(userId:ID!, date:String!):DiaryDetail
    diaryInfo(userId:ID!, date:String!):DiaryInfo
}